$date
	Wed Sep 28 04:54:20 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_fourBitSubtractor $end
$var wire 1 ! Bout $end
$var wire 4 " D [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$scope module UUT $end
$var wire 4 % A [3:0] $end
$var wire 4 & B [3:0] $end
$var wire 1 ! Bout $end
$var wire 4 ' D [3:0] $end
$var wire 7 ( W [6:0] $end
$scope module U5 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 + Cin $end
$var wire 1 , Cout $end
$var wire 1 - S $end
$var wire 5 . W [4:0] $end
$upscope $end
$scope module U6 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 Cin $end
$var wire 1 2 Cout $end
$var wire 1 3 S $end
$var wire 5 4 W [4:0] $end
$upscope $end
$scope module U7 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 7 Cin $end
$var wire 1 8 Cout $end
$var wire 1 9 S $end
$var wire 5 : W [4:0] $end
$upscope $end
$scope module U8 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = Cin $end
$var wire 1 ! Cout $end
$var wire 1 > S $end
$var wire 5 ? W [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10011 ?
0>
0=
1<
1;
b1 :
19
08
17
06
05
b10011 4
03
12
01
10
1/
b1 .
1-
0,
1+
0*
0)
b101010 (
b101 '
b101 &
b1010 %
b101 $
b1010 #
b101 "
1!
$end
#10
17
0>
12
11
1=
b1001 ?
1,
18
1*
16
0<
b1110111 (
1-
b11110 .
03
b10100 4
19
b101 "
b101 '
b11110 :
1)
0/
15
b1000 $
b1000 &
b1101 %
b1101 #
#20
09
b1001 :
0!
06
b1110011 (
0-
b10100 .
1>
b1000 "
b1000 '
b1 ?
0)
0;
b1100 &
b1100 $
b100 #
b100 %
#30
1!
00
b1110001 (
1-
b11110 .
03
b1001 4
0>
b1 "
b1 '
b1001 ?
1)
1/
1;
b1110 &
b1110 $
b1111 #
b1111 %
#40
1=
18
0!
16
b1110101 (
0-
b10100 .
09
b10100 :
1>
b1000 "
b1000 '
b1 ?
0)
05
0;
b1010 &
b1010 $
b10 #
b10 %
#50
1!
0*
06
1<
b1111000 (
0-
b1001 .
09
b1001 :
1>
b1000 "
b1000 '
b11110 ?
1)
15
1;
b111 $
b111 &
b1111 #
b1111 %
#60
17
0!
03
12
19
b1001 4
11
b11110 :
1,
1*
16
0<
b1110101 (
0-
b10100 .
1>
b1100 "
b1100 '
b1 ?
0)
0;
b1010 $
b1010 &
b110 #
b110 %
#70
1=
18
09
17
b1001 :
12
1!
0*
10
06
b1110010 (
0-
b1001 .
03
b10100 4
0>
b0 "
b0 '
b1001 ?
1)
0/
1;
b1101 &
b1101 $
b1101 #
b1101 %
#80
07
02
13
0>
11
0=
b1 4
b10011 ?
1,
08
1*
00
1<
b11001 (
0-
b10100 .
09
b10 "
b10 '
b0 :
0)
05
b110 $
b110 &
b1000 %
b1000 #
#90
01
0,
0!
09
1-
1>
b0 :
07
b1 .
b0 ?
02
0*
0<
b0 (
13
b1011 "
b1011 '
b0 4
1/
b1111 $
b1111 &
b1010 %
b1010 #
#100
